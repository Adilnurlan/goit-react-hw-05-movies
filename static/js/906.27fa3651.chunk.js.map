{"version":3,"file":"static/js/906.27fa3651.chunk.js","mappings":"8PACA,EAAuB,yBAAvB,EAA2D,6BAA3D,EAAgG,0BAAhG,EAAiI,yBAAjI,EAAkK,0BAAlK,EAAmM,yBAAnM,EAAkO,wBAAlO,EAAkQ,0BAAlQ,EAAwS,8B,SCoExS,EAhEmB,WACjB,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQJ,EAAaK,IAAI,MAC/BC,EAAAA,EAAAA,YAAU,WAAM,wCACd,uFACgB,OAAVF,GAAmC,KAAjBA,EAAMG,OAD9B,kEAEqBC,EAAAA,EAAAA,IAAiBJ,GAFtC,UAGsB,KADdK,EAFR,QAGWC,OAHX,yCAIWC,MAAM,qCAJjB,OAMEb,EAAUW,GANZ,4CADc,uBAAC,WAAD,wBASdG,EACD,GAAE,CAACR,IAUJ,OAFAS,QAAQC,IAAIjB,IAGV,gCACE,kBAAMkB,UAAWC,EAAQC,SAVR,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,OACjBpB,EAAgB,CAAEqB,EAAGF,EAAKG,SAASnB,MAAMoB,QACzCJ,EAAKK,OACN,EAKG,WACE,kBACEV,UAAWC,EACXU,KAAK,OACLC,YAAY,sBACZC,KAAK,WAEP,mBAAQb,UAAWC,EAAnB,uBAEiB,IAAlBnB,EAAOa,QACN,+BACE,eAAIK,UAAWC,EAAf,SACGnB,EAAOgC,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACV,eAAIjB,UAAWC,EAAf,UACE,UAAC,KAAD,CACED,UAAWC,EACXiB,MAAO,CAAEC,KAAMhC,GACfiC,GAAE,kBAAaJ,GAHjB,WAKE,gBACEhB,UAAWC,EACXoB,IAAG,0CAAqCJ,GACxCK,IAAKP,KAEP,cAAGf,UAAWC,EAAd,SAAwBc,QAXIC,EADtB,SAmBhB,gBAAKhB,UAAWC,EAAhB,+BAIP,C,+LCjEKsB,EAAS,mCAGR,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,sBAAuB,CAClDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASlC,KAAKmC,SAPhB,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bd,GAA9B,wFACkBS,EAAAA,EAAAA,GAAM,SAAD,OAAUT,GAAM,CAC1CU,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASlC,MAPX,kEAUA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAAgCJ,GAAhC,wFACkBoC,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTlC,MAAAA,KAJC,cACCuC,EADD,yBAQEA,EAASlC,KAAKmC,SARhB,kEAWA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bf,GAA9B,wFACkBS,EAAAA,EAAAA,GAAM,SAAD,OAAUT,EAAV,YAAwB,CAClDU,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,OAML9B,QAAQC,IAAI6B,EAASlC,KAAKsC,MANrB,kBAOEJ,EAASlC,KAAKsC,MAPhB,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCjB,GAAjC,wFACkBS,EAAAA,EAAAA,GAAM,SAAD,OAAUT,EAAV,YAAwB,CAClDU,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASlC,KAAKmC,SAPhB,kEA3CPJ,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesPage_list__PJZqT\",\"listItem\":\"MoviesPage_listItem__xJJsb\",\"image\":\"MoviesPage_image__IRfiQ\",\"Link\":\"MoviesPage_Link__DydSS\",\"title\":\"MoviesPage_title__Coe7O\",\"form\":\"MoviesPage_form__2deBf\",\"btn\":\"MoviesPage_btn__Ud5mH\",\"input\":\"MoviesPage_input__16dJ5\",\"emptyPage\":\"MoviesPage_emptyPage__Lg-NO\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { fetchMovieByName } from 'services/moviesApi';\nimport s from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('q');\n  useEffect(() => {\n    async function fetchMovies() {\n      if (query === null || query.trim() === '') return;\n      const data = await fetchMovieByName(query);\n      if (data.length === 0) {\n        return alert('There is no movie with that name');\n      }\n      setMovies(data);\n    }\n    fetchMovies();\n  }, [query]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    setSearchParams({ q: form.elements.query.value });\n    form.reset();\n  };\n  console.log(movies);\n\n  return (\n    <section>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <input\n          className={s.input}\n          type=\"text\"\n          placeholder=\"Please type a movie\"\n          name=\"query\"\n        />\n        <button className={s.btn}>Search</button>\n      </form>\n      {movies.length !== 0 ? (\n        <>\n          <ul className={s.list}>\n            {movies.map(({ title, id, poster_path }) => (\n              <li className={s.listItem} key={id}>\n                <Link\n                  className={s.Link}\n                  state={{ from: location }}\n                  to={`/movies/${id}`}\n                >\n                  <img\n                    className={s.image}\n                    src={`https://image.tmdb.org/t/p/w400/${poster_path}`}\n                    alt={title}\n                  />\n                  <p className={s.title}>{title}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <div className={s.emptyPage}>No found movies</div>\n      )}\n    </section>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst ApiKey = '9a9abe516901ea117e86ba92a0d908e2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendMovies() {\n  const response = await axios('trending/movie/week', {\n    params: {\n      api_key: ApiKey,\n    },\n  });\n  // console.log(response.data);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios(`movie/${id}`, {\n    params: {\n      api_key: ApiKey,\n    },\n  });\n  //   console.log(response.data);\n  return response.data;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: ApiKey,\n      query,\n    },\n  });\n  // console.log(response.data);\n  return response.data.results;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`movie/${id}/credits`, {\n    params: {\n      api_key: ApiKey,\n    },\n  });\n  console.log(response.data.cast);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: ApiKey,\n    },\n  });\n  // console.log(response.data.results);\n  return response.data.results;\n}\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","useEffect","trim","fetchMovieByName","data","length","alert","fetchMovies","console","log","className","s","onSubmit","evt","preventDefault","form","target","q","elements","value","reset","type","placeholder","name","map","title","id","poster_path","state","from","to","src","alt","ApiKey","fetchTrendMovies","axios","params","api_key","response","results","fetchMovieById","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}