{"version":3,"file":"static/js/906.529682c2.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","services/moviesApi.js"],"sourcesContent":["import ReactPaginate from 'react-paginate';\nimport styled from 'styled-components';\n\nconst MyPaginate = styled(ReactPaginate).attrs({\n  activeClassName: 'active',\n})`\n  margin-bottom: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  list-style-type: none;\n  padding: 0 5rem;\n  margin-right: auto;\n  margin-left: auto;\n  width: 800px;\n  li a {\n    border-radius: 7px;\n    padding: 0.1rem 1rem;\n    border: gray 1px solid;\n    cursor: pointer;\n  }\n  li.previous a,\n  li.next a,\n  li.break a {\n    border-color: transparent;\n  }\n  li.active a {\n    background-color: orange;\n    border-color: transparent;\n    color: white;\n    min-width: 32px;\n  }\n  li.disabled a {\n    color: grey;\n  }\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n`;\n\nexport default MyPaginate;\n","import MyPaginate from './Pagination.styled';\n\nexport const Pagination = ({ pageCount, onClick }) => {\n  return (\n    <>\n      <MyPaginate\n        breakLabel=\"...\"\n        nextLabel=\"next >\"\n        onPageChange={onClick}\n        pageRangeDisplayed={5}\n        pageCount={pageCount}\n        previousLabel=\"< previous\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesPage_list__PJZqT\",\"listItem\":\"MoviesPage_listItem__xJJsb\",\"image\":\"MoviesPage_image__IRfiQ\",\"Link\":\"MoviesPage_Link__DydSS\",\"title\":\"MoviesPage_title__Coe7O\",\"form\":\"MoviesPage_form__2deBf\",\"btn\":\"MoviesPage_btn__Ud5mH\",\"input\":\"MoviesPage_input__16dJ5\",\"emptyPage\":\"MoviesPage_emptyPage__Lg-NO\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { fetchMovieByName } from 'services/moviesApi';\nimport { Pagination } from 'components/Pagination/Pagination';\nimport s from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [page, setPage] = useState(1);\n  const location = useLocation();\n  const query = searchParams.get('q');\n\n  useEffect(() => {\n    async function fetchMovies() {\n      if (query === null || query.trim() === '') return;\n      const data = await fetchMovieByName(query, page);\n      if (data.results.length === 0) {\n        return alert('There is no movie with that name');\n      }\n      setMovies(data);\n    }\n    fetchMovies();\n  }, [query, page]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    setSearchParams({ q: form.elements.query.value });\n    form.reset();\n  };\n\n  const handlePageClick = event => {\n    const newPage = event.selected + 1;\n    setPage(newPage);\n  };\n\n  return (\n    <section>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <input\n          className={s.input}\n          type=\"text\"\n          placeholder=\"Please type a movie\"\n          name=\"query\"\n        />\n        <button className={s.btn}>Search</button>\n      </form>\n      {movies.results ? (\n        <>\n          <ul className={s.list}>\n            {movies.results.map(({ title, id, poster_path }) => (\n              <li className={s.listItem} key={id}>\n                <Link\n                  className={s.Link}\n                  state={{ from: location }}\n                  to={`/movies/${id}`}\n                >\n                  <img\n                    className={s.image}\n                    src={`https://image.tmdb.org/t/p/w400/${poster_path}`}\n                    alt={title}\n                  />\n                  <p className={s.title}>{title}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n          {movies.total_results > 20 && (\n            <Pagination\n              pageCount={movies.total_pages}\n              onClick={event => handlePageClick(event)}\n            />\n          )}\n        </>\n      ) : (\n        <div className={s.emptyPage}>No found movies</div>\n      )}\n    </section>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst ApiKey = '9a9abe516901ea117e86ba92a0d908e2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendMovies(page) {\n  const response = await axios('trending/movie/week', {\n    params: {\n      api_key: ApiKey,\n      page,\n    },\n  });\n  // console.log(response.data);\n  return response.data;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios(`movie/${id}`, {\n    params: {\n      api_key: ApiKey,\n    },\n  });\n  //   console.log(response.data);\n  return response.data;\n}\n\nexport async function fetchMovieByName(query, page) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: ApiKey,\n      query,\n      page,\n    },\n  });\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`movie/${id}/credits`, {\n    params: {\n      api_key: ApiKey,\n    },\n  });\n  console.log(response.data.cast);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: ApiKey,\n    },\n  });\n  // console.log(response.data.results);\n  return response.data.results;\n}\n"],"names":["styled","ReactPaginate","attrs","activeClassName","Pagination","pageCount","onClick","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","page","setPage","location","useLocation","query","get","useEffect","trim","fetchMovieByName","data","results","length","alert","fetchMovies","className","s","onSubmit","evt","preventDefault","form","target","q","elements","value","reset","type","placeholder","name","map","title","id","poster_path","state","from","to","src","alt","total_results","total_pages","event","newPage","selected","handlePageClick","ApiKey","fetchTrendMovies","axios","params","api_key","response","fetchMovieById","console","log","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}